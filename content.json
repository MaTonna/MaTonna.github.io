{"pages":[],"posts":[{"title":"vue监听多个data值变化","text":"操作方法 使用 computed计算属性定义一个变量，用来返回多个 data 值 使用 watch侦听属性控制变量，当变量发生改变时，执行函数，并加上 deep:true 的选项参数，用于发现对象内部值的变化 代码演示使用场景，表单验证时，其中一个控件为空，则不允许点击提交按钮 12345678910111213141516171819202122computed: { allFormParam() { const { value1, value2, value3 } = this; return { value1, value2, value3 } }}，watch: { allFormParam: { handler(val) { let flag = false; for (const key in val) { if (val.hasOwnProperty(key) &amp;&amp; val[key] !== '') { flag = true; } } this.formBtnDisabled = flag; }, deep: true }}","link":"/2018/10/24/vue监听多个data值变化/"},{"title":"base64 转 blob 通用方法","text":"1234567891011121314dataURItoBlob(base64Data) { let byteString; if (base64Data.split(',')[0].indexOf('base64') &gt;= 0) byteString = atob(base64Data.split(',')[1]); else byteString = unescape(base64Data.split(',')[1]); let mimeString = base64Data .split(',')[0] .split(':')[1] .split(';')[0]; let ia = new Uint8Array(byteString.length); for (let i = 0; i &lt; byteString.length; i++) { ia[i] = byteString.charCodeAt(i); } return new Blob([ia], { type: mimeString });}","link":"/2018/10/24/base64 转 blob 通用方法/"}],"tags":[],"categories":[]}